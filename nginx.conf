events {
    worker_connections 1024;
}

http {
    upstream user-service {
        server user-service:3002;
    }
    
    upstream product-service {
        server product-service:3001;
    }
    
    upstream order-service {
        server order-service:3003;
    }
    
    upstream notification-service {
        server notification-service:3004;
    }

    server {
        listen 80;
        server_name localhost;

        # Health check endpoint
        location /health {
            return 200 '{"status":"healthy","message":"E-commerce Platform is running"}';
            add_header Content-Type application/json;
        }

        # User Service routes
        location /api/users/ {
            proxy_pass http://user-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Product Service routes
        location /api/products/ {
            proxy_pass http://product-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Order Service routes
        location /api/cart/ {
            proxy_pass http://order-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/orders/ {
            proxy_pass http://order-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Notification Service routes
        location /api/notifications/ {
            proxy_pass http://notification-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Default route
        location / {
            return 200 '{"message":"E-commerce Platform API","services":["user-service","product-service","order-service","notification-service"],"health":"/health"}';
            add_header Content-Type application/json;
        }
    }
}
