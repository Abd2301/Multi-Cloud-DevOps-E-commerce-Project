{
  "name": "ecommerce-multicloud-demo",
  "version": "1.0.0",
  "description": "Multi-Cloud Microservices E-commerce Platform Demo",
  "main": "demo-service-communication.js",
  "scripts": {
    "demo": "node demo-service-communication.js",
    "demo-complete": "node demo-complete-ecommerce-flow.js",
    "demo-platform": "node demo-complete-platform.js",
    "start-services": "concurrently \"cd apps/user-service && npm start\" \"cd apps/product-service && npm start\" \"cd apps/order-service && npm start\" \"cd apps/notification-service && npm start\"",
    "test-all": "cd apps/user-service && npm test && cd ../product-service && npm test && cd ../order-service && npm test && cd ../notification-service && npm test",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:restart": "docker-compose restart",
    "docker:clean": "docker-compose down -v && docker system prune -f",
    "terraform:init:azure": "cd infrastructure/azure && terraform init",
    "terraform:plan:azure": "cd infrastructure/azure && terraform plan",
    "terraform:apply:azure": "cd infrastructure/azure && terraform apply",
    "terraform:destroy:azure": "cd infrastructure/azure && terraform destroy",
    "terraform:init:aws": "cd infrastructure/aws && terraform init",
    "terraform:plan:aws": "cd infrastructure/aws && terraform plan",
    "terraform:apply:aws": "cd infrastructure/aws && terraform apply",
    "terraform:destroy:aws": "cd infrastructure/aws && terraform destroy",
    "terraform:output:azure": "cd infrastructure/azure && terraform output",
    "terraform:output:aws": "cd infrastructure/aws && terraform output"
  },
  "keywords": ["microservices", "ecommerce", "devops", "demo"],
  "author": "DevOps Learning Project",
  "license": "MIT",
  "dependencies": {
    "axios": "^1.6.0"
  },
  "devDependencies": {
    "concurrently": "^8.2.2"
  }
}
